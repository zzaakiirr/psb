---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authors":
    post:
      summary: Creates an author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: Author created
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      author:
                        id: 1
                        name: john
                        surname: doe
                        patronymic: patronymic
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      author:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          surname:
                            type: string
                            nullable: true
                          patronymic:
                            type: string
                            nullable: true
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Name can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                  nullable: true
                patronymic:
                  type: string
                  nullable: true
              required:
              - name
              - surname
        required: true
    get:
      summary: Lists authors
      tags:
      - Authors
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        default: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        default: 25
        schema:
          type: integer
      responses:
        '200':
          description: Returns list of authors
          content:
            application/json:
              examples:
                example:
                  value:
                  - id: 1
                    name: john
                    surname: doe
                    patronymic: patronymic
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    surname:
                      type: string
                      nullable: true
                    patronymic:
                      type: string
                      nullable: true
                    created_at:
                      type: date_time
                    updated_at:
                      type: date_time
  "/authors/{id}":
    get:
      summary: Retrieves an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Author found
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    name: john
                    surname: doe
                    patronymic: patronymic
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  surname:
                    type: string
                    nullable: true
                  patronymic:
                    type: string
                    nullable: true
                  created_at:
                    type: date_time
                  updated_at:
                    type: date_time
                required:
                - id
                - name
                - surname
                - patronymic
                - created_at
                - updated_at
        '404':
          description: Author not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
    put:
      summary: Updates an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Author updated
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      author:
                        id: 1
                        name: john
                        surname: doe
                        patronymic: patronymic
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      author:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          surname:
                            type: string
                            nullable: true
                          patronymic:
                            type: string
                            nullable: true
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Name can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
        '404':
          description: Author not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                surname:
                  type: string
                  nullable: true
                patronymic:
                  type: string
                  nullable: true
        required: true
    delete:
      summary: Deletes an author and reassigns his courses to other author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: new_courses_author_id
        in: query
        required: false
        description: Id of the author to reassign current author's courses
        schema:
          type: integer
      responses:
        '200':
          description: Author deleted
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      author:
                        id: 1
                        name: john
                        surname: doe
                        patronymic: patronymic
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      author:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          surname:
                            type: string
                            nullable: true
                          patronymic:
                            type: string
                            nullable: true
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '404':
          description: New courses author not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
  "/competencies":
    post:
      summary: Creates a competency
      tags:
      - Competencies
      parameters: []
      responses:
        '201':
          description: Competency created
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      competency:
                        id: 1
                        title: Test competency
                        course_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      competency:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          course_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Title can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                course_id:
                  type: integer
              required:
              - title
              - course_id
        required: true
    get:
      summary: Lists competencies
      tags:
      - Competencies
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: course_id
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        default: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        default: 25
        schema:
          type: integer
      responses:
        '200':
          description: Returns list of competencies
          content:
            application/json:
              examples:
                example:
                  value:
                  - id: 1
                    title: Test competency
                    course_id: 1
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    course_id:
                      type: integer
                    created_at:
                      type: date_time
                    updated_at:
                      type: date_time
  "/competencies/{id}":
    get:
      summary: Retrieves a competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Competency found
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    title: Test competency
                    course_id: 1
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  course_id:
                    type: integer
                  created_at:
                    type: date_time
                  updated_at:
                    type: date_time
                required:
                - id
                - title
                - course_id
                - created_at
                - updated_at
        '404':
          description: Competency not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
    put:
      summary: Updates a competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Competency updated
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      competency:
                        id: 1
                        title: Test competency
                        course_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      competency:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          course_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Title can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
        '404':
          description: Competency not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                course_id:
                  type: integer
                  nullable: true
        required: true
    delete:
      summary: Deletes a competency
      tags:
      - Competencies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Competency deleted
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      competency:
                        id: 1
                        title: Test competency
                        course_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      competency:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          course_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '404':
          description: Competency not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
  "/courses":
    post:
      summary: Creates a course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: Course created
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      course:
                        id: 1
                        title: Test course
                        author_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      course:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Title can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - author_id
        required: true
    get:
      summary: Lists courses
      tags:
      - Courses
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: author_id
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        default: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        default: 25
        schema:
          type: integer
      responses:
        '200':
          description: Returns list of courses
          content:
            application/json:
              examples:
                example:
                  value:
                  - id: 1
                    title: Test course
                    author_id: 1
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    author_id:
                      type: integer
                    created_at:
                      type: date_time
                    updated_at:
                      type: date_time
  "/courses/{id}":
    get:
      summary: Retrieves a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Course found
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    title: Test course
                    author_id: 1
                    created_at: '2024-10-11T00:00:00.000Z'
                    updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  author_id:
                    type: integer
                  created_at:
                    type: date_time
                  updated_at:
                    type: date_time
                required:
                - id
                - title
                - author_id
                - created_at
                - updated_at
        '404':
          description: Course not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
    put:
      summary: Updates a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Course updated
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      course:
                        id: 1
                        title: Test course
                        author_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      course:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '422':
          description: Invalid request
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Title can't be blank
                    payload: {}
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  payload:
                    type: object
                required:
                - status
                - message
                - payload
        '404':
          description: Course not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                author_id:
                  type: integer
                  nullable: true
        required: true
    delete:
      summary: Deletes a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Course deleted
          content:
            application/json:
              examples:
                example:
                  value:
                    status: success
                    message:
                    payload:
                      course:
                        id: 1
                        title: Test course
                        author_id: 1
                        created_at: '2024-10-11T00:00:00.000Z'
                        updated_at: '2024-10-11T00:00:00.000Z'
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                    nullable: true
                  payload:
                    type: object
                    properties:
                      course:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          author_id:
                            type: integer
                          created_at:
                            type: date_time
                          updated_at:
                            type: date_time
                required:
                - status
                - message
                - payload
        '404':
          description: Course not found
          content:
            application/json:
              examples:
                example:
                  value:
                    status: error
                    message: Record not found
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                - status
                - message
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
